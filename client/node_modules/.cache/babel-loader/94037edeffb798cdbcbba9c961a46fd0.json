{"ast":null,"code":"var _jsxFileName = \"C:\\\\CLIENTPAGE\\\\client\\\\src\\\\pages\\\\Showing.js\";\nimport React, { Component } from 'react';\nimport MyShowList from '../components/MyShowList';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport { CircularProgress } from '@material-ui/core';\n\nclass Showing extends Component {\n  constructor(props) {\n    super(props);\n\n    this.stateRefresh = () => {\n      this.setState({\n        myshows: '',\n        completed: 0,\n        searchKeyword: ''\n      });\n      this.callApi().then(res => this.setState({\n        myshows: res\n      })).catch(err => console.log(err));\n    };\n\n    this.callApi = async () => {\n      const response = await fetch('/api/myshows');\n      const body = await response.json();\n      return body;\n    };\n\n    this.progress = () => {\n      const completed = this.state.completed;\n      this.setState({\n        completed: completed >= 100 ? 0 : completed + 1\n      });\n    };\n\n    this.handleValueChange = e => {\n      let nextState = {};\n      nextState[e.target.name] = e.target.value;\n      this.setState(nextState);\n    };\n\n    this.state = {\n      myshows: '',\n      completed: 0,\n      searchKeyword: ''\n    };\n    this.stateRefresh = this.stateRefresh.bind(this);\n  }\n\n  componentDidMount() {\n    this.timer = setInterval(this.progress, 20);\n    this.callApi().then(res => this.setState({\n      myshows: res\n    })).catch(err => console.log(err));\n  }\n\n  render() {\n    const mapcomponets = data => {\n      return data.map(c => {\n        return React.createElement(MyShowList, {\n          show_id: c.show_id,\n          ticketing_date: c.ticketing_date,\n          refund_flag: c.refund_flag,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        });\n      });\n    };\n\n    const cellList = [\"공연번호\", \"예매일\", \"현황\"];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, cellList.map(c => {\n      return React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, c);\n    }))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, this.state.myshows ? mapcomponets(this.state.myshows) : React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      colSpan: \"3\",\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(CircularProgress, {\n      variant: \"determinate\",\n      value: this.state.completed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default Showing;","map":{"version":3,"sources":["C:/CLIENTPAGE/client/src/pages/Showing.js"],"names":["React","Component","MyShowList","Table","TableHead","TableBody","TableRow","TableCell","CircularProgress","Showing","constructor","props","stateRefresh","setState","myshows","completed","searchKeyword","callApi","then","res","catch","err","console","log","response","fetch","body","json","progress","state","handleValueChange","e","nextState","target","name","value","bind","componentDidMount","timer","setInterval","render","mapcomponets","data","map","c","show_id","ticketing_date","refund_flag","cellList"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport MyShowList from '../components/MyShowList';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\n\r\nclass Showing extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      myshows: '',\r\n      completed:0,\r\n      searchKeyword:''\r\n    }\r\n    this.stateRefresh = this.stateRefresh.bind(this);\r\n  }\r\n\r\nstateRefresh = () => {\r\n  this.setState({\r\n    myshows: '',\r\n    completed:0,\r\n    searchKeyword:''\r\n  });\r\n\r\nthis.callApi()\r\n.then(res => this.setState({myshows: res}))\r\n.catch(err => console.log(err));\r\n}\r\ncomponentDidMount() {\r\n  this.timer = setInterval(this.progress, 20);\r\n  this.callApi()\r\n  .then(res => this.setState({myshows: res}))\r\n  .catch(err => console.log(err));\r\n}\r\n\r\ncallApi = async () => {\r\n  const response = await fetch('/api/myshows');\r\n  const body = await response.json();\r\n  return body;\r\n}\r\nprogress = () => {\r\n  const {completed} = this.state;\r\n  this.setState({completed: completed >= 100 ? 0: completed +1});\r\n}\r\nhandleValueChange =(e) => {\r\n  let nextState = {}\r\n  nextState[e.target.name] = e.target.value;\r\n  this.setState(nextState);\r\n}\r\nrender() {\r\n  const mapcomponets = (data) => {\r\n    return data.map((c) => {\r\n      return <MyShowList show_id={c.show_id} ticketing_date={c.ticketing_date} refund_flag={c.refund_flag} />\r\n\r\n    })\r\n  }\r\n \r\n  const cellList = [\"공연번호\", \"예매일\", \"현황\"]\r\n  \r\n  return(\r\n    <div>\r\n \r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              {cellList.map(c => {\r\n                return <TableCell>{c}</TableCell>\r\n              })}\r\n            </TableRow>\r\n\r\n          </TableHead>\r\n          <TableBody>\r\n          {this.state.myshows ? mapcomponets(this.state.myshows) :\r\n           <TableRow>\r\n             <TableCell colSpan=\"3\" align=\"center\">\r\n             <CircularProgress  variant=\"determinate\" value={this.state.completed}/>\r\n             </TableCell>\r\n      </TableRow>\r\n}\r\n        </TableBody>\r\n        </Table>\r\n\r\n    </div>\r\n  );\r\n};\r\n}\r\n\r\nexport default Showing;"]},"metadata":{},"sourceType":"module"}