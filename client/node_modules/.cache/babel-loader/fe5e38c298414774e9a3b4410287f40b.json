{"ast":null,"code":"var _jsxFileName = \"C:\\\\CLIENTPAGE\\\\client\\\\src\\\\pages\\\\Showing.js\";\nimport React, { Component } from 'react';\nimport MyShowList from '../components/MyShowList';\nimport Table from '@material-ui/core/Table';\nimport Paper from '@material-ui/core/Paper';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\n\nclass Showing extends Component {\n  constructor(props) {\n    super(props);\n\n    this.stateRefresh = () => {\n      this.setState({\n        myshows: ''\n      });\n      this.callApi().then(res => this.setState({\n        myshows: res\n      })).catch(err => console.log(err));\n    };\n\n    this.callApi = async () => {\n      const response = await fetch('/api/myshows');\n      const body = await response.json();\n      return body;\n    };\n\n    this.state = {\n      myshows: ''\n    };\n  }\n\n  componentDidMount() {\n    this.callApi().then(res => this.setState({\n      myshows: res\n    })).catch(err => console.log(err));\n  }\n\n  render() {\n    const cellList = [\"공연\", \"예매일\", \"현황\"];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, cellList.map(c => {\n      return React.createElement(TableCell, {\n        key: c.toString(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, c);\n    }))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.state.myshows ? this.state.myshows.map(c => {\n      return React.createElement(MyShowList, {\n        key: c.show_id,\n        show_id: c.show_id,\n        ticketing_date: c.ticketing_date,\n        refund_flag: c.refund_flag,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      });\n    }) : \"no data\"))));\n  }\n\n}\n\nexport default Showing;","map":{"version":3,"sources":["C:/CLIENTPAGE/client/src/pages/Showing.js"],"names":["React","Component","MyShowList","Table","Paper","TableHead","TableBody","TableRow","TableCell","Showing","constructor","props","stateRefresh","setState","myshows","callApi","then","res","catch","err","console","log","response","fetch","body","json","state","componentDidMount","render","cellList","map","c","toString","show_id","ticketing_date","refund_flag"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;;AAIA,MAAMC,OAAN,SAAsBR,SAAtB,CAAgC;AAC9BS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAOrBC,YAPqB,GAON,MAAM;AACnB,WAAKC,QAAL,CAAc;AACZC,QAAAA,OAAO,EAAE;AADG,OAAd;AAIF,WAAKC,OAAL,GACCC,IADD,CACMC,GAAG,IAAI,KAAKJ,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAEG;AAAX,OAAd,CADb,EAECC,KAFD,CAEOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFd;AAGC,KAfoB;;AAAA,SAsBrBJ,OAtBqB,GAsBX,YAAY;AACpB,YAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,cAAD,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,aAAOD,IAAP;AACD,KA1BoB;;AAEjB,SAAKE,KAAL,GAAa;AACXZ,MAAAA,OAAO,EAAE;AADE,KAAb;AAGD;;AAWHa,EAAAA,iBAAiB,GAAG;AAClB,SAAKZ,OAAL,GACCC,IADD,CACMC,GAAG,IAAI,KAAKJ,QAAL,CAAc;AAAEC,MAAAA,OAAO,EAAEG;AAAX,KAAd,CADb,EAECC,KAFD,CAEOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFd;AAGD;;AAODS,EAAAA,MAAM,GAAG;AACP,UAAMC,QAAQ,GAAG,CAAC,IAAD,EAAO,KAAP,EAAc,IAAd,CAAjB;AAGA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,QAAQ,CAACC,GAAT,CAAaC,CAAC,IAAI;AACjB,aAAO,oBAAC,SAAD;AAAW,QAAA,GAAG,EAAEA,CAAC,CAACC,QAAF,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+BD,CAA/B,CAAP;AACD,KAFA,CADH,CADF,CADF,EASE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKL,KAAL,CAAWZ,OAAX,GAAqB,KAAKY,KAAL,CAAWZ,OAAX,CAAmBgB,GAAnB,CAAuBC,CAAC,IAAG;AAC/C,aAAO,oBAAC,UAAD;AAAY,QAAA,GAAG,EAAEA,CAAC,CAACE,OAAnB;AAA4B,QAAA,OAAO,EAAEF,CAAC,CAACE,OAAvC;AAAgD,QAAA,cAAc,EAAEF,CAAC,CAACG,cAAlE;AAAkF,QAAA,WAAW,EAAEH,CAAC,CAACI,WAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFqB,CAArB,GAEI,SAHL,CATF,CADJ,CADA,CADF;AAuBD;;AAvD+B;;AA0DhC,eAAe1B,OAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport MyShowList from '../components/MyShowList';\r\nimport Table from '@material-ui/core/Table';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\n\r\n\r\n\r\nclass Showing extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      myshows: '',\r\n    }\r\n  }\r\n\r\nstateRefresh = () => {\r\n  this.setState({\r\n    myshows: '',\r\n  });\r\n\r\nthis.callApi()\r\n.then(res => this.setState({ myshows: res }))\r\n.catch(err => console.log(err));\r\n}\r\ncomponentDidMount() {\r\n  this.callApi()\r\n  .then(res => this.setState({ myshows: res }))\r\n  .catch(err => console.log(err));\r\n}\r\n\r\ncallApi = async () => {\r\n  const response = await fetch('/api/myshows');\r\n  const body = await response.json();\r\n  return body\r\n}\r\nrender() {\r\n  const cellList = [\"공연\", \"예매일\", \"현황\"];\r\n  \r\n  \r\n  return(\r\n    <div>\r\n    <Paper>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              {cellList.map(c => {\r\n                return <TableCell key={c.toString()}>{c}</TableCell>\r\n              })}\r\n            </TableRow>\r\n\r\n          </TableHead>\r\n          <TableBody>\r\n          {this.state.myshows ? this.state.myshows.map(c=> {\r\n            return <MyShowList key={c.show_id} show_id={c.show_id} ticketing_date={c.ticketing_date} refund_flag={c.refund_flag} />\r\n          }) : \"no data\"}\r\n\r\n        </TableBody>\r\n             \r\n        </Table>\r\n </Paper>\r\n    </div>\r\n  )\r\n}\r\n}\r\n\r\nexport default Showing;"]},"metadata":{},"sourceType":"module"}